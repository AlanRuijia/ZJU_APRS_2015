<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title><%= title %></title>
<style type="text/css">
html{height:100%}
body{height:100%;margin:0px;padding:0px}
#controller{width:100%; border-bottom:3px outset; height:30px; filter:alpha(Opacity=100); -moz-opacity:1; opacity:1; z-index:10000; background-color:lightblue;}
#container{height:100%; width:100%;}
</style>
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=xYBeNeqobNOPgiofCkvp1Ln6"></script>
<script src="/bower_components/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="http://developer.baidu.com/map/jsdemo/data/points-sample-data.js"> </script>
<script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js"></script>
<script src="/symbols.js"> </script>
<script type="text/javascript">


    var points = new Array();
    var symbol = new Array();
    var line = new Array();
    var pointpaths = new Array();

    var m;  //点击产生的标记
    var click_lng;
    var click_lat;

    var map; //百度地图对象
    var centerPoint;
    var color = ["black", "red", "blue", "yellow", "green", "orange", "grey"];
    var lineColor = new Array();
    var countColor = 0;
    var lineInfo = new Array();
    var pointpaths = new Array();
    var callsignposition = new Array();
/*
    for (var i in data) {
        if (typeof(points[data[i].id]) == "undefined") {
            points[data[i].id] = new Array();
            points[data[i].id][0] = new BMap.Point(data[i].lat, data[i].lon);
            pointpaths[data[i].id] = new Array();
            pointpaths[data[i].id][0] = data[i].path;
            countColor = (countColor + 1) % 7;
            lineColor[data[i].id] = color[countColor];
            lineInfo[data[i].id] = {"source": data[i].id, "path": data[i].path, "time": data[i].time, "des": data[i].des };
            callsignposition[data[i].id] = {'lat':data[i].lat,'lon':data[i].lon};
        }
        else {
            points[data[i].id][points[data[i].id].length] = new BMap.Point(data[i].lat, data[i].lon);
            pointpaths[data[i].id][pointpaths[data[i].id].length] = data[i].path;
            callsignposition[data[i].id] = {'lat':data[i].lat,'lon':data[i].lon};
        }
        if (typeof(symbol[data[i].id]) == "undefined") {
            symbol[data[i].id] = data[i].symbol;
        }
    }
    //console.log(points)
    //console.log(symbol);
*/
function init() {

    //初始化地图,选取第一个点为起始点
    map = new BMap.Map("container");
    map.centerAndZoom(new BMap.Point(120.091444,30.307601),12);

    var myLoc = new BMap.LocalCity();

    myLoc.get(function(result) {
      map.setCenter(result.name);
    });

    map.enableScrollWheelZoom();
    map.addControl(new BMap.NavigationControl());
    map.addControl(new BMap.ScaleControl());
    map.addControl(new BMap.OverviewMapControl({isOpen: true}));

    //连接所有点
    //map.addOverlay(new BMap.Polyline(points, {strokeColor: "black", strokeWeight: 5, strokeOpacity: 1}));
/*
    for (var i in points) {
        var options = {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_CIRCLE,
            color: '#d340c3'
        };
        var pointCollection = new BMap.PointCollection(points[i], options);
        map.addOverlay(pointCollection);

        //console.log(lineColor[i]);
        line[i] = new BMap.Polyline(points[i], {strokeColor: lineColor[i], strokeWeight: 1, strokeOpacity: 1});
        map.addOverlay(line[i]);

        var pt = points[i][0];
        //console.log(i);
        console.log(symbol[i]);
        var s=Symbol[symbol[i]];

        if (typeof(s)!="undefined")
        {
            var pic=s[0];
            console.log(s);
            console.log(i);
            var x=s[1];
            var y=s[2];

            if (pic==1) {
                 var myIcon = new BMap.Icon("/1.png", new BMap.Size(22,22),{
                 imageOffset: new BMap.Size(0-x, y)
               });
            }
            else {
                var myIcon = new BMap.Icon("/2.png", new BMap.Size(22,22),{
                 imageOffset: new BMap.Size(0-x, y)
               });
            }
            var marker2 = new BMap.Marker(pt,{icon:myIcon});  // 创建标注
            map.addOverlay(marker2);
                 // 将标注添加到地图中
        }
    }
*/
/*

    //点击轨迹显示详细数据
    map.addEventListener("mousemove",function(e){
        //获取鼠标当前经纬度
        click_lng =  e.point.lng ;
        click_lat =  e.point.lat;
	     });

    for (var i in points){
        line[i].info = lineInfo[i];
        line[i].onclick = function(){
            map.removeOverlay(m);
            var p = new BMap.Point(click_lng,click_lat);
            m = new BMap.Marker(p);
            var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
            l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat
                + "<br>source:" + this.info.source + "<br>path:" + this.info.path + "<br>time:" + this.info.time + "<br>des:" + this.info.des);
            m.setLabel(l);
            map.addOverlay(m);
        //alert(click_lng + ' ' + click_lat);
        }
    }
*/

/*
  //鼠标移动到轨迹的点上显示path
  var markers = [];
  var coresps = [];
  var myIcon = new BMap.Icon("1.png", new BMap.Size(20,20));
  for (var i in points){
    for(var j in points[i]){
      var nmk = new BMap.Marker(points[i][j],{
        icon: myIcon
      });
      map.addOverlay(nmk);
      markers.push(nmk);
      coresps.push(pointpaths[i][j]);
    }
  }
  var digipeater, curve;
  for(var i in markers){
    markers[i].addEventListener('mouseover',function(e){
      digipeater = [];
      // add points of paths
      for(j in coresps[i]){
        var pp = new BMap.Point(callsignposition[coresps[i][j]].lat, callsignposition[coreps[i][j]].lon);
        digipeater.push(pp);
      }
      curve = new BMapLib.Curveline(digipeater,{strokeColor:"blue", strokeWeight:3, strokeOpacity:0.5});
      map.addOverlay(curve); // add curve into the map
    });
    markers[i].addEventListener('mouseout',function(e){
			map.removeOverlay(curve); //remove curve from the map
		});
  }
*/
    setInterval(refreshRoute, 2000);
}

function refreshRoute() {
    var bs = map.getBounds();
    var bssw = bs.getSouthWest();
    var bsne = bs.getNorthEast();
    //console.log(bssw.lng + ", " + bssw.lat + " to " + bsne.lng + ", " + bsne.lat + "\n");

    $.get("/data", {"sw_lng": bssw.lng, "sw_lat": bssw.lat, "ne_lng": bsne.lng, "ne_lat": bsne.lat}
    ,function(result) {
        //var pt = new Array();
        var markers = [];
        console.log(result);
        for (var i in result) {
            if (typeof(points[result[i].id]) == "undefined") {
                points[result[i].id] = new Array();
                points[result[i].id][0] = new BMap.Point(result[i].lat, result[i].lon);
                countColor = (countColor + 1) % 7;
                lineColor[result[i].id] = color[countColor];
                lineInfo[result[i].id] = {"source": result[i].id, "path": result[i].path, "time": result[i].time, "des": result[i].des };
                //pt.push(points[result[i].id][0]);
                //markers.push(new BMap.Marker(points[result[i].id][0]));
            }
            else {
                points[result[i].id][points[result[i].id].length] = new BMap.Point(result[i].lat, result[i].lon);

                //pt.push(points[result[i].id][points[result[i].id].length - 1]);
                if (points[result[i].id][points[result[i].id].length-1] != points[result[i].id][points[result[i].id].length-2])
                    markers.push(new BMap.Marker(points[result[i].id][points[result[i].id].length - 1]));

                line[result[i].id] = new BMap.Polyline(
                                            [ points[result[i].id][points[result[i].id].length - 2],
                                            points[result[i].id][points[result[i].id].length - 1] ],
                                            {strokeColor: lineColor[result[i].id], strokeWeight: 1, strokeOpacity: 1}
                                        );

                //console.log(line[result[i].id]);
                map.addOverlay(line[result[i].id]);

                line[result[i].id].info = lineInfo[result[i].id];
                line[result[i].id].onclick = function(){
                    map.removeOverlay(m);
                    var p = new BMap.Point(click_lng,click_lat);
                    m = new BMap.Marker(p);
                    var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
                    l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat
                        + "<br>source:" + this.info.source + "<br>path:" + this.info.path + "<br>time:" + this.info.time + "<br>des:" + this.info.des);

                    m.setLabel(l);
                    map.addOverlay(m);
                }


                if (typeof(symbol[result[i].id]) == "undefined") {
                    symbol[result[i].id] = result[i].symbol;
                    var pt = points[result[i].id][0];
                    var s=Symbol[symbol[result[i].id]];

                    if (typeof(s)!="undefined")
                    {
                        var pic=s[0];
                        console.log(s);
                        console.log(i);
                        var x=s[1];
                        var y=s[2];

                        if (pic==1) {
                             var myIcon = new BMap.Icon("/1.png", new BMap.Size(22,22),{
                             imageOffset: new BMap.Size(0-x, y)
                           });
                        }
                        else {
                            var myIcon = new BMap.Icon("/2.png", new BMap.Size(22,22),{
                             imageOffset: new BMap.Size(0-x, y)
                           });
                        }
                        var marker2 = new BMap.Marker(pt,{icon:myIcon});  // 创建标注
                        //map.addOverlay(marker2);
                        markers.push(marker2);
                    }else{

                        markers.push(new BMap.Marker(pt));
                    }
                }


            }
        }
        /*
        var options = {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_CIRCLE,
            color: '#d340c3'
        };
        var pointCollection = new BMap.PointCollection(pt, options);
        map.addOverlay(pointCollection);
        */
        var markerClusterer = new BMapLib.MarkerClusterer(map, {markers:markers});
    });
}

</script>
</head>

<body onload="init();">
    <div id="container"></div>
</body>
</html>
